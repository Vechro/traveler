name: traveler
# Based off https://github.com/supabase/supabase/tree/master/docker
services:
  apisix:
    # https://github.com/apache/apisix/blob/master/CHANGELOG.md
    image: apache/apisix:3.8.0-debian
    restart: unless-stopped
    ports:
      - "9080:9080/tcp"
    volumes:
      - ./volumes/api/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./volumes/api/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro

  auth:
    # https://github.com/supabase/gotrue
    image: supabase/gotrue:v2.139.0
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}

      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

      GOTRUE_SITE_URL: ${SITE_URL}
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP}

      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: ${JWT_EXPIRY}
      GOTRUE_JWT_SECRET: ${JWT_SECRET}

      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP}
      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM}
      # GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: true
      # GOTRUE_SMTP_MAX_FREQUENCY: 1s
      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}
      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}

      GOTRUE_EXTERNAL_PHONE_ENABLED: ${ENABLE_PHONE_SIGNUP}
      GOTRUE_SMS_AUTOCONFIRM: ${ENABLE_PHONE_AUTOCONFIRM}

  db:
    # https://github.com/supabase/postgres
    image: supabase/postgres:15.1.1.8
    healthcheck:
      test: pg_isready -U postgres -h localhost
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    # ports:
    #   - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_HOST: /var/run/postgresql
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/db/roles.sql:/docker-entrypoint-initdb.d/roles.sql
      - ./volumes/db/init/data.sql:/docker-entrypoint-initdb.d/seed.sql
      - db-data:/var/lib/postgresql/data

  rest:
    image: postgrest/postgrest:v12.0.2
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS}
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"

  meta:
    image: supabase/postgres-meta:v0.75.0
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: ${POSTGRES_HOST}
      PG_META_DB_PORT: ${POSTGRES_PORT}
      PG_META_DB_NAME: ${POSTGRES_DB}
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}

  # storage:
  #   # https://github.com/supabase/storage-api
  #   image: supabase/storage-api:v0.28.2
  #   depends_on:
  #     db: # Disable this if you are using an external Postgres database
  #       condition: service_healthy
  #     rest:
  #       condition: service_started
  #   restart: unless-stopped
  #   environment:
  #     ANON_KEY: ${PUBLIC_ANON_KEY}
  #     SERVICE_KEY: ${SERVICE_ROLE_KEY}
  #     POSTGREST_URL: http://rest:3000
  #     PGRST_JWT_SECRET: ${JWT_SECRET}
  #     DATABASE_URL: postgres://supabase_storage_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
  #     FILE_SIZE_LIMIT: 52428800 # 50 MiB
  #     STORAGE_BACKEND: file
  #     FILE_STORAGE_BACKEND_PATH: /var/lib/storage
  #     TENANT_ID: stub
  #     # TODO: https://github.com/supabase/storage-api/issues/55
  #     REGION: stub
  #     GLOBAL_S3_BUCKET: stub
  #   volumes:
  #     - ./volumes/storage:/var/lib/storage

volumes:
  db-data: {}
