version: '3.8'
name: traveler
# Based off of https://github.com/supabase/supabase/tree/master/docker
services:
  # envoy:
  #   image: envoyproxy/envoy:v1.24.0
  #   entrypoint: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml
  #   ports:
  #     - "10000:10000/tcp"
  #     - "9901:9901/tcp"
  #   volumes:
  #     - ./volumes/api/envoy.yaml:/etc/envoy/envoy.yaml:ro

  apisix:
    image: apache/apisix:3.0.0-debian
    restart: unless-stopped
    ports:
      - "9080:9080/tcp"
      - "9180:9180/tcp"
    volumes:
      - ./volumes/api/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./volumes/api/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro

  # etcd:
  #   image: bitnami/etcd:3.4.15
  #   restart: always
  #   volumes:
  #     - etcd_data:/bitnami/etcd
  #   environment:
  #     ETCD_ENABLE_V2: "true"
  #     ALLOW_NONE_AUTHENTICATION: "yes"
  #     ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
  #     ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
  #   ports:
  #     - "2379:2379/tcp"

  auth:
    # https://github.com/supabase/gotrue
    image: supabase/gotrue:v2.30.2
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}

      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

      GOTRUE_SITE_URL: ${SITE_URL}
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP}

      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: ${JWT_EXPIRY}
      GOTRUE_JWT_SECRET: ${JWT_SECRET}

      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP}
      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM}
      # GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: true
      # GOTRUE_SMTP_MAX_FREQUENCY: 1s
      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}
      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}

      GOTRUE_EXTERNAL_PHONE_ENABLED: ${ENABLE_PHONE_SIGNUP}
      GOTRUE_SMS_AUTOCONFIRM: ${ENABLE_PHONE_AUTOCONFIRM}

  db:
    # https://github.com/supabase/postgres
    image: supabase/postgres:14.1.0.89
    healthcheck:
      test: pg_isready -U postgres -h localhost
      interval: 5s
      timeout: 5s
      retries: 10
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - log_min_messages=fatal # prevents Realtime polling queries from appearing in logs
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_HOST: /var/run/postgresql
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/db/roles.sql:/docker-entrypoint-initdb.d/roles.sql
      - db-data:/var/lib/postgresql/data

  rest:
    image: postgrest/postgrest:v10.1.1
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS}
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"

volumes:
  db-data: {}
  # etcd_data:
  #   driver: local
